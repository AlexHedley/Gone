   0  $accept : source_file $end

   1  source_file : package_clause import_decl_list top_level_decl_list
   2              | package_clause import_decl_list
   3              | package_clause top_level_decl_list
   4              | package_clause

   5  package_clause : PACKAGE IDENTIFIER

   6  import_decl_list : import_decl
   7                   | import_decl_list import_decl

   8  import_decl : IMPORT import_spec
   9              | IMPORT '(' import_spec_list ')'

  10  import_spec_list : import_spec
  11                   | import_spec_list ';' import_spec

  12  import_spec : package_name_list import_path
  13              | import_path

  14  import_path : STRING_LITERAL

  15  package_name_list : package_name
  16                    | package_name_list '.' package_name

  17  package_name : PACKAGE_IDENTIFIER

  18  top_level_decl_list : top_level_decl
  19                      | top_level_decl_list top_level_decl

  20  top_level_decl : function_decl

  21  function_decl : FUNC IDENTIFIER function_signature function_body
  22                | FUNC IDENTIFIER function_signature

  23  function_body : block

  24  function_signature : parameters result
  25                     | parameters

  26  result : parameters
  27         | type

  28  parameters : '(' parameter_list ')'
  29             | '(' ')'

  30  parameter_list : parameter_decl
  31                 | parameter_list ',' parameter_decl

  32  parameter_decl : identifier_list OP_ELLIPSIS type
  33                 | identifier_list type
  34                 | type

  35  identifier_list : IDENTIFIER
  36                  | identifier_list ',' IDENTIFIER

  37  block : '{' statement_list '}'
  38        | '{' '}'

  39  statement_list : statement
  40                 | statement_list ';' statement

  41  statement : simple_stmt

  42  simple_stmt : expression_stmt

  43  expression_stmt : expression

  44  expression : unary_expr

  45  unary_expr : primary_expr

  46  primary_expr : primary_expr arguments
  47               | primary_expr selector
  48               | operand

  49  operand : literal
  50          | operand_name

  51  operand_name : IDENTIFIER
  52               | qualified_ident

  53  qualified_ident : package_name '.' IDENTIFIER

  54  literal : basic_literal

  55  basic_literal : STRING_LITERAL

  56  selector : '.' IDENTIFIER

  57  arguments : '(' inner_arguments ')'
  58            | '(' ')'

  59  inner_arguments : expression_list

  60  expression_list : expression
  61                  | expression_list ',' expression

  62  type : type_name

  63  type_name : TYPE_IDENTIFIER

state 0
	$accept : . source_file $end  (0)

	PACKAGE  shift 1
	.  error

	source_file  goto 2
	package_clause  goto 3


state 1
	package_clause : PACKAGE . IDENTIFIER  (5)

	IDENTIFIER  shift 4
	.  error


state 2
	$accept : source_file . $end  (0)

	$end  accept


state 3
	source_file : package_clause . import_decl_list top_level_decl_list  (1)
	source_file : package_clause . import_decl_list  (2)
	source_file : package_clause . top_level_decl_list  (3)
	source_file : package_clause .  (4)

	FUNC  shift 5
	IMPORT  shift 6
	$end  reduce 4

	import_decl_list  goto 7
	top_level_decl_list  goto 8
	import_decl  goto 9
	top_level_decl  goto 10
	function_decl  goto 11


state 4
	package_clause : PACKAGE IDENTIFIER .  (5)

	.  reduce 5


state 5
	function_decl : FUNC . IDENTIFIER function_signature function_body  (21)
	function_decl : FUNC . IDENTIFIER function_signature  (22)

	IDENTIFIER  shift 12
	.  error


state 6
	import_decl : IMPORT . import_spec  (8)
	import_decl : IMPORT . '(' import_spec_list ')'  (9)

	PACKAGE_IDENTIFIER  shift 13
	STRING_LITERAL  shift 14
	'('  shift 15
	.  error

	import_spec  goto 16
	package_name_list  goto 17
	import_path  goto 18
	package_name  goto 19


state 7
	source_file : package_clause import_decl_list . top_level_decl_list  (1)
	source_file : package_clause import_decl_list .  (2)
	import_decl_list : import_decl_list . import_decl  (7)

	FUNC  shift 5
	IMPORT  shift 6
	$end  reduce 2

	top_level_decl_list  goto 20
	import_decl  goto 21
	top_level_decl  goto 10
	function_decl  goto 11


state 8
	source_file : package_clause top_level_decl_list .  (3)
	top_level_decl_list : top_level_decl_list . top_level_decl  (19)

	FUNC  shift 5
	$end  reduce 3

	top_level_decl  goto 22
	function_decl  goto 11


state 9
	import_decl_list : import_decl .  (6)

	.  reduce 6


state 10
	top_level_decl_list : top_level_decl .  (18)

	.  reduce 18


state 11
	top_level_decl : function_decl .  (20)

	.  reduce 20


state 12
	function_decl : FUNC IDENTIFIER . function_signature function_body  (21)
	function_decl : FUNC IDENTIFIER . function_signature  (22)

	'('  shift 23
	.  error

	function_signature  goto 24
	parameters  goto 25


state 13
	package_name : PACKAGE_IDENTIFIER .  (17)

	.  reduce 17


state 14
	import_path : STRING_LITERAL .  (14)

	.  reduce 14


state 15
	import_decl : IMPORT '(' . import_spec_list ')'  (9)

	PACKAGE_IDENTIFIER  shift 13
	STRING_LITERAL  shift 14
	.  error

	import_spec  goto 26
	import_spec_list  goto 27
	package_name_list  goto 17
	import_path  goto 18
	package_name  goto 19


state 16
	import_decl : IMPORT import_spec .  (8)

	.  reduce 8


state 17
	import_spec : package_name_list . import_path  (12)
	package_name_list : package_name_list . '.' package_name  (16)

	STRING_LITERAL  shift 14
	'.'  shift 28
	.  error

	import_path  goto 29


state 18
	import_spec : import_path .  (13)

	.  reduce 13


state 19
	package_name_list : package_name .  (15)

	.  reduce 15


state 20
	source_file : package_clause import_decl_list top_level_decl_list .  (1)
	top_level_decl_list : top_level_decl_list . top_level_decl  (19)

	FUNC  shift 5
	$end  reduce 1

	top_level_decl  goto 22
	function_decl  goto 11


state 21
	import_decl_list : import_decl_list import_decl .  (7)

	.  reduce 7


state 22
	top_level_decl_list : top_level_decl_list top_level_decl .  (19)

	.  reduce 19


state 23
	parameters : '(' . parameter_list ')'  (28)
	parameters : '(' . ')'  (29)

	IDENTIFIER  shift 30
	TYPE_IDENTIFIER  shift 31
	')'  shift 32
	.  error

	type  goto 33
	parameter_list  goto 34
	parameter_decl  goto 35
	identifier_list  goto 36
	type_name  goto 37


state 24
	function_decl : FUNC IDENTIFIER function_signature . function_body  (21)
	function_decl : FUNC IDENTIFIER function_signature .  (22)

	'{'  shift 38
	$end  reduce 22
	FUNC  reduce 22

	function_body  goto 39
	block  goto 40


state 25
	function_signature : parameters . result  (24)
	function_signature : parameters .  (25)

	TYPE_IDENTIFIER  shift 31
	'('  shift 23
	$end  reduce 25
	FUNC  reduce 25
	'{'  reduce 25

	parameters  goto 41
	result  goto 42
	type  goto 43
	type_name  goto 37


state 26
	import_spec_list : import_spec .  (10)

	.  reduce 10


state 27
	import_decl : IMPORT '(' import_spec_list . ')'  (9)
	import_spec_list : import_spec_list . ';' import_spec  (11)

	')'  shift 44
	';'  shift 45
	.  error


state 28
	package_name_list : package_name_list '.' . package_name  (16)

	PACKAGE_IDENTIFIER  shift 13
	.  error

	package_name  goto 46


state 29
	import_spec : package_name_list import_path .  (12)

	.  reduce 12


state 30
	identifier_list : IDENTIFIER .  (35)

	.  reduce 35


state 31
	type_name : TYPE_IDENTIFIER .  (63)

	.  reduce 63


state 32
	parameters : '(' ')' .  (29)

	.  reduce 29


state 33
	parameter_decl : type .  (34)

	.  reduce 34


state 34
	parameters : '(' parameter_list . ')'  (28)
	parameter_list : parameter_list . ',' parameter_decl  (31)

	')'  shift 47
	','  shift 48
	.  error


state 35
	parameter_list : parameter_decl .  (30)

	.  reduce 30


state 36
	parameter_decl : identifier_list . OP_ELLIPSIS type  (32)
	parameter_decl : identifier_list . type  (33)
	identifier_list : identifier_list . ',' IDENTIFIER  (36)

	TYPE_IDENTIFIER  shift 31
	OP_ELLIPSIS  shift 49
	','  shift 50
	.  error

	type  goto 51
	type_name  goto 37


state 37
	type : type_name .  (62)

	.  reduce 62


state 38
	block : '{' . statement_list '}'  (37)
	block : '{' . '}'  (38)

	IDENTIFIER  shift 52
	PACKAGE_IDENTIFIER  shift 13
	STRING_LITERAL  shift 53
	'}'  shift 54
	.  error

	package_name  goto 55
	statement_list  goto 56
	statement  goto 57
	simple_stmt  goto 58
	expression_stmt  goto 59
	expression  goto 60
	unary_expr  goto 61
	primary_expr  goto 62
	operand  goto 63
	literal  goto 64
	operand_name  goto 65
	qualified_ident  goto 66
	basic_literal  goto 67


state 39
	function_decl : FUNC IDENTIFIER function_signature function_body .  (21)

	.  reduce 21


state 40
	function_body : block .  (23)

	.  reduce 23


state 41
	result : parameters .  (26)

	.  reduce 26


state 42
	function_signature : parameters result .  (24)

	.  reduce 24


state 43
	result : type .  (27)

	.  reduce 27


state 44
	import_decl : IMPORT '(' import_spec_list ')' .  (9)

	.  reduce 9


state 45
	import_spec_list : import_spec_list ';' . import_spec  (11)

	PACKAGE_IDENTIFIER  shift 13
	STRING_LITERAL  shift 14
	.  error

	import_spec  goto 68
	package_name_list  goto 17
	import_path  goto 18
	package_name  goto 19


state 46
	package_name_list : package_name_list '.' package_name .  (16)

	.  reduce 16


state 47
	parameters : '(' parameter_list ')' .  (28)

	.  reduce 28


state 48
	parameter_list : parameter_list ',' . parameter_decl  (31)

	IDENTIFIER  shift 30
	TYPE_IDENTIFIER  shift 31
	.  error

	type  goto 33
	parameter_decl  goto 69
	identifier_list  goto 36
	type_name  goto 37


state 49
	parameter_decl : identifier_list OP_ELLIPSIS . type  (32)

	TYPE_IDENTIFIER  shift 31
	.  error

	type  goto 70
	type_name  goto 37


state 50
	identifier_list : identifier_list ',' . IDENTIFIER  (36)

	IDENTIFIER  shift 71
	.  error


state 51
	parameter_decl : identifier_list type .  (33)

	.  reduce 33


state 52
	operand_name : IDENTIFIER .  (51)

	.  reduce 51


state 53
	basic_literal : STRING_LITERAL .  (55)

	.  reduce 55


state 54
	block : '{' '}' .  (38)

	.  reduce 38


state 55
	qualified_ident : package_name . '.' IDENTIFIER  (53)

	'.'  shift 72
	.  error


state 56
	block : '{' statement_list . '}'  (37)
	statement_list : statement_list . ';' statement  (40)

	';'  shift 73
	'}'  shift 74
	.  error


state 57
	statement_list : statement .  (39)

	.  reduce 39


state 58
	statement : simple_stmt .  (41)

	.  reduce 41


state 59
	simple_stmt : expression_stmt .  (42)

	.  reduce 42


state 60
	expression_stmt : expression .  (43)

	.  reduce 43


state 61
	expression : unary_expr .  (44)

	.  reduce 44


state 62
	unary_expr : primary_expr .  (45)
	primary_expr : primary_expr . arguments  (46)
	primary_expr : primary_expr . selector  (47)

	'('  shift 75
	'.'  shift 76
	')'  reduce 45
	';'  reduce 45
	','  reduce 45
	'}'  reduce 45

	arguments  goto 77
	selector  goto 78


state 63
	primary_expr : operand .  (48)

	.  reduce 48


state 64
	operand : literal .  (49)

	.  reduce 49


state 65
	operand : operand_name .  (50)

	.  reduce 50


state 66
	operand_name : qualified_ident .  (52)

	.  reduce 52


state 67
	literal : basic_literal .  (54)

	.  reduce 54


state 68
	import_spec_list : import_spec_list ';' import_spec .  (11)

	.  reduce 11


state 69
	parameter_list : parameter_list ',' parameter_decl .  (31)

	.  reduce 31


state 70
	parameter_decl : identifier_list OP_ELLIPSIS type .  (32)

	.  reduce 32


state 71
	identifier_list : identifier_list ',' IDENTIFIER .  (36)

	.  reduce 36


state 72
	qualified_ident : package_name '.' . IDENTIFIER  (53)

	IDENTIFIER  shift 79
	.  error


state 73
	statement_list : statement_list ';' . statement  (40)

	IDENTIFIER  shift 52
	PACKAGE_IDENTIFIER  shift 13
	STRING_LITERAL  shift 53
	.  error

	package_name  goto 55
	statement  goto 80
	simple_stmt  goto 58
	expression_stmt  goto 59
	expression  goto 60
	unary_expr  goto 61
	primary_expr  goto 62
	operand  goto 63
	literal  goto 64
	operand_name  goto 65
	qualified_ident  goto 66
	basic_literal  goto 67


state 74
	block : '{' statement_list '}' .  (37)

	.  reduce 37


state 75
	arguments : '(' . inner_arguments ')'  (57)
	arguments : '(' . ')'  (58)

	IDENTIFIER  shift 52
	PACKAGE_IDENTIFIER  shift 13
	STRING_LITERAL  shift 53
	')'  shift 81
	.  error

	package_name  goto 55
	expression  goto 82
	unary_expr  goto 61
	primary_expr  goto 62
	operand  goto 63
	literal  goto 64
	operand_name  goto 65
	qualified_ident  goto 66
	basic_literal  goto 67
	inner_arguments  goto 83
	expression_list  goto 84


state 76
	selector : '.' . IDENTIFIER  (56)

	IDENTIFIER  shift 85
	.  error


state 77
	primary_expr : primary_expr arguments .  (46)

	.  reduce 46


state 78
	primary_expr : primary_expr selector .  (47)

	.  reduce 47


state 79
	qualified_ident : package_name '.' IDENTIFIER .  (53)

	.  reduce 53


state 80
	statement_list : statement_list ';' statement .  (40)

	.  reduce 40


state 81
	arguments : '(' ')' .  (58)

	.  reduce 58


state 82
	expression_list : expression .  (60)

	.  reduce 60


state 83
	arguments : '(' inner_arguments . ')'  (57)

	')'  shift 86
	.  error


state 84
	inner_arguments : expression_list .  (59)
	expression_list : expression_list . ',' expression  (61)

	','  shift 87
	')'  reduce 59


state 85
	selector : '.' IDENTIFIER .  (56)

	.  reduce 56


state 86
	arguments : '(' inner_arguments ')' .  (57)

	.  reduce 57


state 87
	expression_list : expression_list ',' . expression  (61)

	IDENTIFIER  shift 52
	PACKAGE_IDENTIFIER  shift 13
	STRING_LITERAL  shift 53
	.  error

	package_name  goto 55
	expression  goto 88
	unary_expr  goto 61
	primary_expr  goto 62
	operand  goto 63
	literal  goto 64
	operand_name  goto 65
	qualified_ident  goto 66
	basic_literal  goto 67


state 88
	expression_list : expression_list ',' expression .  (61)

	.  reduce 61


43 terminals, 39 nonterminals
64 grammar rules, 89 states
